{"version":3,"sources":["baloon-content.js","navigation.js"],"names":["jQuery","document","ready","$","STATUS_FREE","STATUS_HOUSE_READY","STATUS_HOUSE_BUILDING","STATUS_RESERVED","_defineProperty","STATUS_SOLD","statusColors","locationData","status","name","area","price","path80784","p1-1","setStatusColor","element","css","Object","keys","forEach","id","attrs","$elem","data","attr","cursor","opacity","transition","hover","this","on","updateField","selector","value","$el","show","find","text","hide","event","preventDefault","bottom","left","$map","$svg","$inner","viewBox","baseVal","svgWidth","width","svgHeight","height","translate","x","y","isDragging","start","clamp","val","min","max","Math","lastTouchDist","getMinScale","arguments","length","enabled","mapWidth","mapHeight","scaledWidth","scaledHeight","minX","maxX","minY","concat","scale","clientX","window","getDistance","p1","p2","dx","hypot","clientY","getMidpoint","updateTransform","e","setTransition","zoomSpeed","oldScale","originalEvent","rect","getBoundingClientRect","mouseX","mouseY","touches","touch","dy","top","lastTouchMid","dist","mid","scaleFactor","centerInitialView"],"mappings":"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","file":"main.min.js","sourcesContent":["jQuery(document).ready(function ($) {\r\n    // Статусы\r\n    const STATUS_FREE = 'Свободный участок';\r\n    const STATUS_HOUSE_READY = 'Участок с готовым домом';\r\n    const STATUS_HOUSE_BUILDING = 'Участок со строящимся домом';\r\n    const STATUS_RESERVED = 'Забронированный участок';\r\n    const STATUS_SOLD = 'Проданный участок';\r\n\r\n    const statusColors = {\r\n        [STATUS_FREE]: '#91CD2F',\r\n        [STATUS_HOUSE_READY]: '#7113BA',\r\n        [STATUS_HOUSE_BUILDING]: '#1665FF',\r\n        [STATUS_RESERVED]: '#fff',\r\n        [STATUS_SOLD]: '#A62E1B'\r\n    };\r\n\r\n    // Данные элементов (ключ — id path)\r\n    // Теперь цена указывается вручную в data.price\r\n    const locationData = {\r\n        'path62461': { status: STATUS_FREE, name: 'Участок 3665', area: 1669, price: '8 840 000' },\r\n        'path62465': { status: STATUS_SOLD, name: 'Участок 3277', area: 1132, price: '6 000 000' },\r\n        'path62463': { status: STATUS_HOUSE_BUILDING, name: 'Участок 3276', area: 1810, price: '9 500 000' },\r\n        'path77406': { status: STATUS_HOUSE_READY, name: 'Участок 3444', area: 1547, price: '7 900 000' },\r\n        'path80784': { status: STATUS_RESERVED, name: 'Участок 3257', area: 1323, price: '6 700 000' },\r\n        'p1-1': { name: 'Участок 3257', price: '6 700 000' }\r\n    };\r\n\r\n    // Функция окраски\r\n    function setStatusColor(element, status) {\r\n        if (statusColors[status]) {\r\n            $(element).css('fill', statusColors[status]);\r\n        }\r\n    }\r\n\r\n    // Инициализация: добавляем атрибуты и стили\r\n    Object.keys(locationData).forEach(function (id) {\r\n        const $elem = $('#' + id);\r\n        if (!$elem.length) return;\r\n\r\n        const data = locationData[id];\r\n        const attrs = {};\r\n\r\n        // Добавляем имя (номер/название) в data-locationname\r\n        if (data.name) {\r\n            attrs['data-locationname'] = data.name;\r\n        }\r\n\r\n        // Добавляем площадь если есть\r\n        if (data.area) {\r\n            attrs['data-locationarea'] = data.area;\r\n        }\r\n\r\n        // Добавляем цену из данных\r\n        if (data.price) {\r\n            attrs['data-locationprice'] = data.price;\r\n        }\r\n\r\n        if (Object.keys(attrs).length) {\r\n            $elem.attr(attrs);\r\n        }\r\n\r\n        // Окрашиваем по статусу\r\n        if (data.status) {\r\n            setStatusColor($elem, data.status);\r\n        }\r\n\r\n        // Стили с плавной прозрачностью\r\n        $elem.css({\r\n            'cursor': 'pointer',\r\n            'opacity': '0.7',\r\n            'transition': 'opacity 0.3s ease'\r\n        }).hover(\r\n            function () { $(this).css('opacity', '1'); },\r\n            function () { $(this).css('opacity', '0.7'); }\r\n        );\r\n    });\r\n\r\n    // Клик по элементу\r\n    $('#map').on('click', 'path', function () {\r\n        const id = $(this).attr('id');\r\n        if (!id || !locationData[id]) return;\r\n\r\n        const data = locationData[id];\r\n        const status = data.status || '';\r\n        const name = data.name || '';\r\n        const area = data.area || '';\r\n        const price = data.price || '';\r\n\r\n        // Функция замены текста и управления видимостью\r\n        function updateField(selector, value) {\r\n            const $el = $(selector);\r\n            if (value) {\r\n                $el.show().find('span').text(value);\r\n            } else {\r\n                $el.hide();\r\n            }\r\n        }\r\n\r\n        // Заполняем balloon с проверкой\r\n        updateField(\".location__title\", name);\r\n        updateField(\".location__status\", status);\r\n        updateField(\".location__area\", area);\r\n        updateField(\".location__price\", price);\r\n\r\n        if (status) setStatusColor($(this), status);\r\n    });\r\n\r\n    // Закрытие balloon\r\n    $('.balloon__close-button').on('click', function (event) {\r\n        event.preventDefault();\r\n        $(\".balloon\").css({ \"bottom\": \"0\", \"left\": \"0\" });\r\n    });\r\n});\r\n","\r\n    $(function() {\r\n      const $map = $('#map');\r\n      const $svg = $('#svg');\r\n      const $inner = $('#inner');\r\n\r\n      const viewBox = $svg[0].viewBox.baseVal;\r\n      const svgWidth = viewBox.width;\r\n      const svgHeight = viewBox.height;\r\n\r\n      let scale = 1;\r\n      let translate = { x: 0, y: 0 };\r\n      let isDragging = false;\r\n      let start = { x: 0, y: 0 };\r\n      let lastTouchDist = null;\r\n      let lastTouchMid = null;\r\n\r\n      function clamp(val, min, max) {\r\n        return Math.max(min, Math.min(max, val));\r\n      }\r\n\r\n      function getMinScale() {\r\n        return Math.max(\r\n          $map.width() / svgWidth,\r\n          $map.height() / svgHeight\r\n        );\r\n      }\r\n\r\n      function setTransition(enabled, mode = 'mouse') {\r\n        if (!enabled) {\r\n          $inner.css('transition', 'none');\r\n        } else if (mode === 'touch') {\r\n          $inner.css('transition', 'transform 0.05s linear');\r\n        } else {\r\n          $inner.css('transition', 'transform 0.2s ease-out');\r\n        }\r\n      }\r\n\r\n      function updateTransform() {\r\n        const mapWidth = $map.width();\r\n        const mapHeight = $map.height();\r\n\r\n        const scaledWidth = svgWidth * scale;\r\n        const scaledHeight = svgHeight * scale;\r\n\r\n        const minX = Math.min(0, mapWidth - scaledWidth);\r\n        const minY = Math.min(0, mapHeight - scaledHeight);\r\n\r\n        const maxX = 0;\r\n        const maxY = 0;\r\n\r\n        translate.x = clamp(translate.x, minX, maxX);\r\n        translate.y = clamp(translate.y, minY, maxY);\r\n\r\n        $inner.css('transform', `translate(${translate.x}px, ${translate.y}px) scale(${scale})`);\r\n      }\r\n\r\n      function centerInitialView() {\r\n        const mapWidth = $map.width();\r\n        const mapHeight = $map.height();\r\n\r\n        // Заполняем экран (с обрезкой краёв по большей оси)\r\n        scale = Math.max(\r\n          mapWidth / svgWidth,\r\n          mapHeight / svgHeight\r\n        );\r\n\r\n        const scaledWidth = svgWidth * scale;\r\n        const scaledHeight = svgHeight * scale;\r\n\r\n        translate.x = (mapWidth - scaledWidth) / 2;\r\n        translate.y = (mapHeight - scaledHeight) / 2;\r\n\r\n        updateTransform();\r\n      }\r\n\r\n      // Мышь\r\n      $svg.on('mousedown', function(e) {\r\n        isDragging = true;\r\n        setTransition(false);\r\n        start = { x: e.clientX - translate.x, y: e.clientY - translate.y };\r\n        $svg.css('cursor', 'grabbing');\r\n      });\r\n\r\n      $(window).on('mousemove', function(e) {\r\n        if (!isDragging) return;\r\n        translate = {\r\n          x: e.clientX - start.x,\r\n          y: e.clientY - start.y\r\n        };\r\n        updateTransform();\r\n      });\r\n\r\n      $(window).on('mouseup', function() {\r\n        isDragging = false;\r\n        $svg.css('cursor', 'grab');\r\n      });\r\n\r\n      $svg.on('wheel', function(e) {\r\n        e.preventDefault();\r\n        setTransition(true, 'mouse');\r\n\r\n        const zoomSpeed = 0.0005;\r\n        const oldScale = scale;\r\n        scale += -e.originalEvent.deltaY * zoomSpeed;\r\n\r\n        scale = Math.max(scale, getMinScale()); // без верхнего ограничения\r\n\r\n        const rect = $svg[0].getBoundingClientRect();\r\n        const mouseX = e.clientX - rect.left;\r\n        const mouseY = e.clientY - rect.top;\r\n\r\n        const dx = mouseX - translate.x;\r\n        const dy = mouseY - translate.y;\r\n\r\n        translate.x -= dx * (scale / oldScale - 1);\r\n        translate.y -= dy * (scale / oldScale - 1);\r\n\r\n        updateTransform();\r\n      });\r\n\r\n      // Тач\r\n      $svg.on('touchstart', function(e) {\r\n        setTransition(true, 'touch');\r\n        const touches = e.originalEvent.touches;\r\n\r\n        if (touches.length === 1) {\r\n          isDragging = true;\r\n          const touch = touches[0];\r\n          start = { x: touch.clientX - translate.x, y: touch.clientY - translate.y };\r\n        } else if (touches.length === 2) {\r\n          lastTouchDist = getDistance(touches[0], touches[1]);\r\n          lastTouchMid = getMidpoint(touches[0], touches[1]);\r\n        }\r\n      });\r\n\r\n      $svg.on('touchmove', function(e) {\r\n        e.preventDefault();\r\n        setTransition(true, 'touch');\r\n        const touches = e.originalEvent.touches;\r\n\r\n        if (touches.length === 1 && isDragging) {\r\n          const touch = touches[0];\r\n          translate = {\r\n            x: touch.clientX - start.x,\r\n            y: touch.clientY - start.y\r\n          };\r\n          updateTransform();\r\n        } else if (touches.length === 2) {\r\n          const dist = getDistance(touches[0], touches[1]);\r\n          const mid = getMidpoint(touches[0], touches[1]);\r\n\r\n          if (lastTouchDist && lastTouchMid) {\r\n            const oldScale = scale;\r\n            const scaleFactor = dist / lastTouchDist;\r\n            scale *= scaleFactor;\r\n\r\n            scale = Math.max(scale, getMinScale());\r\n\r\n            const dx = mid.x - translate.x;\r\n            const dy = mid.y - translate.y;\r\n\r\n            translate.x -= dx * (scale / oldScale - 1);\r\n            translate.y -= dy * (scale / oldScale - 1);\r\n\r\n            updateTransform();\r\n          }\r\n\r\n          lastTouchDist = dist;\r\n          lastTouchMid = mid;\r\n        }\r\n      });\r\n\r\n      $svg.on('touchend', function(e) {\r\n        const touches = e.originalEvent.touches;\r\n        if (touches.length < 2) {\r\n          lastTouchDist = null;\r\n          lastTouchMid = null;\r\n        }\r\n        if (touches.length === 0) {\r\n          isDragging = false;\r\n        }\r\n      });\r\n\r\n      function getDistance(p1, p2) {\r\n        const dx = p2.clientX - p1.clientX;\r\n        const dy = p2.clientY - p1.clientY;\r\n        return Math.hypot(dx, dy);\r\n      }\r\n\r\n      function getMidpoint(p1, p2) {\r\n        return {\r\n          x: (p1.clientX + p2.clientX) / 2,\r\n          y: (p1.clientY + p2.clientY) / 2\r\n        };\r\n      }\r\n\r\n      $(window).on('resize', centerInitialView);\r\n      centerInitialView();\r\n    });\r\n"]}