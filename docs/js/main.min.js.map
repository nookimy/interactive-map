{"version":3,"sources":["baloon.js","navigation.js"],"names":["jQuery","document","ready","$","statusColors","Участок со строящимся домом","Забронированный участок","Проданный участок","setStatusColor","element","status","showBalloon","$element","e","text","attr","currentStatus","isSold","clientY","targetRect","toggle","$balloon","clientX","left","balloonHeight","outerHeight","css","balloonWidth","outerWidth","display","position","concat","x","removeBalloon","hide","innerWidth","each","nameStatus","this","window","on","preventDefault","event","is","target","closest","length","$map","$svg","$inner","viewBox","baseVal","svgWidth","width","svgHeight","height","translate","y","isDragging","start","clamp","val","min","max","Math","lastTouchDist","getMinScale","arguments","enabled","mapWidth","mapHeight","scaledWidth","scaledHeight","minX","maxX","minY","scale","getDistance","p1","p2","dx","hypot","getMidpoint","updateTransform","setTransition","zoomSpeed","oldScale","originalEvent","rect","getBoundingClientRect","mouseX","mouseY","touches","touch","dy","top","lastTouchMid","dist","mid","scaleFactor","centerInitialView"],"mappings":"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","file":"main.min.js","sourcesContent":["jQuery(document).ready(function ($) {\r\n    const statusColors = {\r\n        'Свободный участок': '#91CD2F',\r\n        'Участок с готовым домом': '#7113BA',\r\n        'Участок со строящимся домом': '#1665FF',\r\n        'Забронированный участок': '#fff',\r\n        'Проданный участок': '#A62E1B'\r\n    };\r\n\r\n    function setStatusColor(element, status) {\r\n        if (statusColors[status]) {\r\n            $(element).css('fill', statusColors[status]);\r\n            $(\".location__status\").css('color', statusColors[status]);\r\n        }\r\n    }\r\n\r\n    // Красим участки при загрузке\r\n    $(\"path[data-locationtype='location']\").each(function () {\r\n        const nameStatus = $(this).attr('data-locationname');\r\n        setStatusColor(this, nameStatus);\r\n    });\r\n\r\n    // Показываем balloon (общая функция)\r\n    function showBalloon($element, e) {\r\n        $(\".location__title > span\").text($element.attr(\"data-locationnumber\"));\r\n        $(\".location__status > span\").text($element.attr(\"data-locationname\"));\r\n        $(\".location__area > span\").text($element.attr(\"data-locationarea\"));\r\n        $(\".location__price > span\").text($element.attr(\"data-locationprice\"));\r\n\r\n        const currentStatus = $element.attr('data-locationname');\r\n        setStatusColor($element, currentStatus);\r\n\r\n        const isSold = currentStatus === 'Проданный участок';\r\n        $('.location__price, .balloon__button--1, .balloon__button--2').toggle(!isSold);\r\n\r\n        const targetRect = map.getBoundingClientRect();\r\n        const x = e.clientX - targetRect.left;\r\n        const y = e.clientY - targetRect.top;\r\n\r\n        const $balloon = $(\".balloon\");\r\n        const balloonHeight = $balloon.outerHeight() || 150;\r\n        const balloonWidth = $balloon.outerWidth() || 200;\r\n\r\n        $balloon.css({\r\n            position: 'absolute',\r\n            left: `${x - balloonWidth / 2}px`,\r\n            top: `${y - balloonHeight - 10}px`,\r\n            display: 'block'\r\n        });\r\n    }\r\n\r\n    function removeBalloon() {\r\n        $(\".balloon\").hide();\r\n    }\r\n\r\n    // На мобильных (≤1024px) — показываем balloon по клику\r\n    if (window.innerWidth <= 1024) {\r\n        $('#map').on(\"click\", \"path[data-locationtype='location']\", function (e) {\r\n            showBalloon($(this), e);\r\n        });\r\n    } else {\r\n        // На десктопе — показываем balloon при наведении\r\n        $('#map').on(\"mouseenter\", \"path[data-locationtype='location']\", function (e) {\r\n            showBalloon($(this), e);\r\n        });\r\n\r\n        $('#map').on(\"mouseleave\", \"path[data-locationtype='location']\", function () {\r\n            removeBalloon();\r\n        });\r\n    }\r\n\r\n    // Скрытие при клике вне balloon или при скролле\r\n    $('.balloon__close-button').on('click', function (event) {\r\n        event.preventDefault();\r\n        removeBalloon();\r\n    });\r\n\r\n    $(window).on('scroll', removeBalloon);\r\n    $('#map').on('scroll wheel', removeBalloon);\r\n\r\n    $(document).on('click', function (e) {\r\n        const $balloon = $(\".balloon\");\r\n        if ($balloon.is(':visible') && !$(e.target).closest('.balloon, path[data-locationtype=\"location\"]').length) {\r\n            removeBalloon();\r\n        }\r\n    });\r\n});\r\n","\r\n    $(function() {\r\n      const $map = $('#map');\r\n      const $svg = $('#svg');\r\n      const $inner = $('#inner');\r\n\r\n      const viewBox = $svg[0].viewBox.baseVal;\r\n      const svgWidth = viewBox.width;\r\n      const svgHeight = viewBox.height;\r\n\r\n      let scale = 1;\r\n      let translate = { x: 0, y: 0 };\r\n      let isDragging = false;\r\n      let start = { x: 0, y: 0 };\r\n      let lastTouchDist = null;\r\n      let lastTouchMid = null;\r\n\r\n      function clamp(val, min, max) {\r\n        return Math.max(min, Math.min(max, val));\r\n      }\r\n\r\n      function getMinScale() {\r\n        return Math.max(\r\n          $map.width() / svgWidth,\r\n          $map.height() / svgHeight\r\n        );\r\n      }\r\n\r\n      function setTransition(enabled, mode = 'mouse') {\r\n        if (!enabled) {\r\n          $inner.css('transition', 'none');\r\n        } else if (mode === 'touch') {\r\n          $inner.css('transition', 'transform 0.05s linear');\r\n        } else {\r\n          $inner.css('transition', 'transform 0.2s ease-out');\r\n        }\r\n      }\r\n\r\n      function updateTransform() {\r\n        const mapWidth = $map.width();\r\n        const mapHeight = $map.height();\r\n\r\n        const scaledWidth = svgWidth * scale;\r\n        const scaledHeight = svgHeight * scale;\r\n\r\n        const minX = Math.min(0, mapWidth - scaledWidth);\r\n        const minY = Math.min(0, mapHeight - scaledHeight);\r\n\r\n        const maxX = 0;\r\n        const maxY = 0;\r\n\r\n        translate.x = clamp(translate.x, minX, maxX);\r\n        translate.y = clamp(translate.y, minY, maxY);\r\n\r\n        $inner.css('transform', `translate(${translate.x}px, ${translate.y}px) scale(${scale})`);\r\n      }\r\n\r\n      function centerInitialView() {\r\n        const mapWidth = $map.width();\r\n        const mapHeight = $map.height();\r\n\r\n        // Заполняем экран (с обрезкой краёв по большей оси)\r\n        scale = Math.max(\r\n          mapWidth / svgWidth,\r\n          mapHeight / svgHeight\r\n        );\r\n\r\n        const scaledWidth = svgWidth * scale;\r\n        const scaledHeight = svgHeight * scale;\r\n\r\n        translate.x = (mapWidth - scaledWidth) / 2;\r\n        translate.y = (mapHeight - scaledHeight) / 2;\r\n\r\n        updateTransform();\r\n      }\r\n\r\n      // Мышь\r\n      $svg.on('mousedown', function(e) {\r\n        isDragging = true;\r\n        setTransition(false);\r\n        start = { x: e.clientX - translate.x, y: e.clientY - translate.y };\r\n        $svg.css('cursor', 'grabbing');\r\n      });\r\n\r\n      $(window).on('mousemove', function(e) {\r\n        if (!isDragging) return;\r\n        translate = {\r\n          x: e.clientX - start.x,\r\n          y: e.clientY - start.y\r\n        };\r\n        updateTransform();\r\n      });\r\n\r\n      $(window).on('mouseup', function() {\r\n        isDragging = false;\r\n        $svg.css('cursor', 'grab');\r\n      });\r\n\r\n      $svg.on('wheel', function(e) {\r\n        e.preventDefault();\r\n        setTransition(true, 'mouse');\r\n\r\n        const zoomSpeed = 0.0005;\r\n        const oldScale = scale;\r\n        scale += -e.originalEvent.deltaY * zoomSpeed;\r\n\r\n        scale = Math.max(scale, getMinScale()); // без верхнего ограничения\r\n\r\n        const rect = $svg[0].getBoundingClientRect();\r\n        const mouseX = e.clientX - rect.left;\r\n        const mouseY = e.clientY - rect.top;\r\n\r\n        const dx = mouseX - translate.x;\r\n        const dy = mouseY - translate.y;\r\n\r\n        translate.x -= dx * (scale / oldScale - 1);\r\n        translate.y -= dy * (scale / oldScale - 1);\r\n\r\n        updateTransform();\r\n      });\r\n\r\n      // Тач\r\n      $svg.on('touchstart', function(e) {\r\n        setTransition(true, 'touch');\r\n        const touches = e.originalEvent.touches;\r\n\r\n        if (touches.length === 1) {\r\n          isDragging = true;\r\n          const touch = touches[0];\r\n          start = { x: touch.clientX - translate.x, y: touch.clientY - translate.y };\r\n        } else if (touches.length === 2) {\r\n          lastTouchDist = getDistance(touches[0], touches[1]);\r\n          lastTouchMid = getMidpoint(touches[0], touches[1]);\r\n        }\r\n      });\r\n\r\n      $svg.on('touchmove', function(e) {\r\n        e.preventDefault();\r\n        setTransition(true, 'touch');\r\n        const touches = e.originalEvent.touches;\r\n\r\n        if (touches.length === 1 && isDragging) {\r\n          const touch = touches[0];\r\n          translate = {\r\n            x: touch.clientX - start.x,\r\n            y: touch.clientY - start.y\r\n          };\r\n          updateTransform();\r\n        } else if (touches.length === 2) {\r\n          const dist = getDistance(touches[0], touches[1]);\r\n          const mid = getMidpoint(touches[0], touches[1]);\r\n\r\n          if (lastTouchDist && lastTouchMid) {\r\n            const oldScale = scale;\r\n            const scaleFactor = dist / lastTouchDist;\r\n            scale *= scaleFactor;\r\n\r\n            scale = Math.max(scale, getMinScale());\r\n\r\n            const dx = mid.x - translate.x;\r\n            const dy = mid.y - translate.y;\r\n\r\n            translate.x -= dx * (scale / oldScale - 1);\r\n            translate.y -= dy * (scale / oldScale - 1);\r\n\r\n            updateTransform();\r\n          }\r\n\r\n          lastTouchDist = dist;\r\n          lastTouchMid = mid;\r\n        }\r\n      });\r\n\r\n      $svg.on('touchend', function(e) {\r\n        const touches = e.originalEvent.touches;\r\n        if (touches.length < 2) {\r\n          lastTouchDist = null;\r\n          lastTouchMid = null;\r\n        }\r\n        if (touches.length === 0) {\r\n          isDragging = false;\r\n        }\r\n      });\r\n\r\n      function getDistance(p1, p2) {\r\n        const dx = p2.clientX - p1.clientX;\r\n        const dy = p2.clientY - p1.clientY;\r\n        return Math.hypot(dx, dy);\r\n      }\r\n\r\n      function getMidpoint(p1, p2) {\r\n        return {\r\n          x: (p1.clientX + p2.clientX) / 2,\r\n          y: (p1.clientY + p2.clientY) / 2\r\n        };\r\n      }\r\n\r\n      $(window).on('resize', centerInitialView);\r\n      centerInitialView();\r\n    });\r\n"]}