{"version":3,"sources":["baloon-content.js","navigation.js"],"names":["jQuery","document","ready","$","STATUS_FREE","STATUS_HOUSE_READY","STATUS_HOUSE_BUILDING","STATUS_RESERVED","_defineProperty","STATUS_SOLD","statusColors","locationData","status","name","area","price","path80784","p1-1","setStatusColor","element","css","Object","keys","forEach","id","attrs","$elem","data","attr","cursor","opacity","transition","hover","this","on","updateField","selector","value","$el","show","find","text","hide","event","preventDefault","bottom","left","$map","$svg","$inner","viewBox","baseVal","svgWidth","width","scale","translate","x","y","isDragging","start","lastTouchDist","clamp","val","min","max","Math","lastTouchMid","height","svgHeight","setTransition","enabled","mode","arguments","length","undefined","updateTransform","mapWidth","mapHeight","scaledHeight","minX","maxX","scaledWidth","maxY","centerInitialView","minY","concat","window","centerX","p2","centerY","svgCenterYBefore","dx","clientY","p1","oldScale","zoomFactor","clientX","getMinScale","e","rect","getBoundingClientRect","touches","originalEvent","deltaY","dy","top","getDistance","touch","scaleFactor","dist","mid","svgCenterXBefore"],"mappings":"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","file":"main.min.js","sourcesContent":["jQuery(document).ready(function ($) {\n    // Статусы\n    const STATUS_FREE = 'Свободный участок';\n    const STATUS_HOUSE_READY = 'Участок с готовым домом';\n    const STATUS_HOUSE_BUILDING = 'Участок со строящимся домом';\n    const STATUS_RESERVED = 'Забронированный участок';\n    const STATUS_SOLD = 'Проданный участок';\n\n    const statusColors = {\n        [STATUS_FREE]: '#91CD2F',\n        [STATUS_HOUSE_READY]: '#7113BA',\n        [STATUS_HOUSE_BUILDING]: '#1665FF',\n        [STATUS_RESERVED]: '#fff',\n        [STATUS_SOLD]: '#A62E1B'\n    };\n\n    // Данные элементов (ключ — id path)\n    // Теперь цена указывается вручную в data.price\n    const locationData = {\n        'path62461': { status: STATUS_FREE, name: 'Участок 3665', area: 1669, price: '8 840 000' },\n        'path62465': { status: STATUS_SOLD, name: 'Участок 3277', area: 1132, price: '6 000 000' },\n        'path62463': { status: STATUS_HOUSE_BUILDING, name: 'Участок 3276', area: 1810, price: '9 500 000' },\n        'path77406': { status: STATUS_HOUSE_READY, name: 'Участок 3444', area: 1547, price: '7 900 000' },\n        'path80784': { status: STATUS_RESERVED, name: 'Участок 3257', area: 1323, price: '6 700 000' },\n        'p1-1': { name: 'Участок 3257', price: '6 700 000' }\n    };\n\n    // Функция окраски\n    function setStatusColor(element, status) {\n        if (statusColors[status]) {\n            $(element).css('fill', statusColors[status]);\n        }\n    }\n\n    // Инициализация: добавляем атрибуты и стили\n    Object.keys(locationData).forEach(function (id) {\n        const $elem = $('#' + id);\n        if (!$elem.length) return;\n\n        const data = locationData[id];\n        const attrs = {};\n\n        // Добавляем имя (номер/название) в data-locationname\n        if (data.name) {\n            attrs['data-locationname'] = data.name;\n        }\n\n        // Добавляем площадь если есть\n        if (data.area) {\n            attrs['data-locationarea'] = data.area;\n        }\n\n        // Добавляем цену из данных\n        if (data.price) {\n            attrs['data-locationprice'] = data.price;\n        }\n\n        if (Object.keys(attrs).length) {\n            $elem.attr(attrs);\n        }\n\n        // Окрашиваем по статусу\n        if (data.status) {\n            setStatusColor($elem, data.status);\n        }\n\n        // Стили с плавной прозрачностью\n        $elem.css({\n            'cursor': 'pointer',\n            'opacity': '0.7',\n            'transition': 'opacity 0.3s ease'\n        }).hover(\n            function () { $(this).css('opacity', '1'); },\n            function () { $(this).css('opacity', '0.7'); }\n        );\n    });\n\n    // Клик по элементу\n    $('#map').on('click', 'path', function () {\n        const id = $(this).attr('id');\n        if (!id || !locationData[id]) return;\n\n        const data = locationData[id];\n        const status = data.status || '';\n        const name = data.name || '';\n        const area = data.area || '';\n        const price = data.price || '';\n\n        // Функция замены текста и управления видимостью\n        function updateField(selector, value) {\n            const $el = $(selector);\n            if (value) {\n                $el.show().find('span').text(value);\n            } else {\n                $el.hide();\n            }\n        }\n\n        // Заполняем balloon с проверкой\n        updateField(\".location__title\", name);\n        updateField(\".location__status\", status);\n        updateField(\".location__area\", area);\n        updateField(\".location__price\", price);\n\n        if (status) setStatusColor($(this), status);\n    });\n\n    // Закрытие balloon\n    $('.balloon__close-button').on('click', function (event) {\n        event.preventDefault();\n        $(\".balloon\").css({ \"bottom\": \"0\", \"left\": \"0\" });\n    });\n});\n","$(function() {\n  const $map = $('#map');\n  const $svg = $('#svg');\n  const $inner = $('#inner');\n\n  const viewBox = $svg[0].viewBox.baseVal;\n  const svgWidth = viewBox.width;\n  const svgHeight = viewBox.height;\n\n  let scale = 1;\n  let translate = { x: 0, y: 0 };\n  let isDragging = false;\n  let start = { x: 0, y: 0 };\n  let lastTouchDist = null;\n  let lastTouchMid = null;\n\n  function clamp(val, min, max) {\n    return Math.max(min, Math.min(max, val));\n  }\n\n  function getMinScale() {\n    return Math.max(\n      $map.width() / svgWidth,\n      $map.height() / svgHeight\n    );\n  }\n\n  function setTransition(enabled, mode = 'mouse') {\n    if (!enabled) {\n      $inner.css('transition', 'none');\n    } else if (mode === 'touch') {\n      $inner.css('transition', 'transform 0.05s linear');\n    } else {\n      $inner.css('transition', 'transform 0.2s ease-out');\n    }\n  }\n\n  function updateTransform() {\n    const mapWidth = $map.width();\n    const mapHeight = $map.height();\n\n    const scaledWidth = svgWidth * scale;\n    const scaledHeight = svgHeight * scale;\n\n    const minX = Math.min(0, mapWidth - scaledWidth);\n    const minY = Math.min(0, mapHeight - scaledHeight);\n\n    const maxX = 0;\n    const maxY = 0;\n\n    translate.x = clamp(translate.x, minX, maxX);\n    translate.y = clamp(translate.y, minY, maxY);\n\n    $inner.css('transform', `translate(${translate.x}px, ${translate.y}px) scale(${scale})`);\n  }\n\n  function centerInitialView() {\n    const mapWidth = $map.width();\n    const mapHeight = $map.height();\n\n    scale = Math.max(\n      mapWidth / svgWidth,\n      mapHeight / svgHeight\n    );\n\n    const scaledWidth = svgWidth * scale;\n    const scaledHeight = svgHeight * scale;\n\n    translate.x = (mapWidth - scaledWidth) / 2;\n    translate.y = (mapHeight - scaledHeight) / 2;\n\n    updateTransform();\n  }\n\n  // Мышь\n  $svg.on('mousedown', function(e) {\n    isDragging = true;\n    setTransition(false);\n    start = { x: e.clientX - translate.x, y: e.clientY - translate.y };\n    $svg.css('cursor', 'grabbing');\n  });\n\n  $(window).on('mousemove', function(e) {\n    if (!isDragging) return;\n    translate = {\n      x: e.clientX - start.x,\n      y: e.clientY - start.y\n    };\n    updateTransform();\n  });\n\n  $(window).on('mouseup', function() {\n    isDragging = false;\n    $svg.css('cursor', 'grab');\n  });\n\n  // Колесо мыши для зума\n  $svg.on('wheel', function(e) {\n    e.preventDefault();\n    setTransition(true, 'mouse');\n\n    const zoomSpeed = 0.0005;\n    const oldScale = scale;\n    scale += -e.originalEvent.deltaY * zoomSpeed;\n\n    scale = Math.max(scale, getMinScale()); // минимум\n\n    const rect = $svg[0].getBoundingClientRect();\n    const mouseX = e.clientX - rect.left;\n    const mouseY = e.clientY - rect.top;\n\n    const dx = mouseX - translate.x;\n    const dy = mouseY - translate.y;\n\n    translate.x -= dx * (scale / oldScale - 1);\n    translate.y -= dy * (scale / oldScale - 1);\n\n    updateTransform();\n  });\n\n  // Тач\n  $svg.on('touchstart', function(e) {\n    setTransition(true, 'touch');\n    const touches = e.originalEvent.touches;\n\n    if (touches.length === 1) {\n      isDragging = true;\n      const touch = touches[0];\n      start = { x: touch.clientX - translate.x, y: touch.clientY - translate.y };\n    } else if (touches.length === 2) {\n      lastTouchDist = getDistance(touches[0], touches[1]);\n      lastTouchMid = getMidpoint(touches[0], touches[1]);\n    }\n  });\n\n  $svg.on('touchmove', function(e) {\n    e.preventDefault();\n    setTransition(true, 'touch');\n    const touches = e.originalEvent.touches;\n\n    if (touches.length === 1 && isDragging) {\n      const touch = touches[0];\n      translate = {\n        x: touch.clientX - start.x,\n        y: touch.clientY - start.y\n      };\n      updateTransform();\n    } else if (touches.length === 2) {\n      const dist = getDistance(touches[0], touches[1]);\n      const mid = getMidpoint(touches[0], touches[1]);\n\n      if (lastTouchDist && lastTouchMid) {\n        const oldScale = scale;\n        const scaleFactor = dist / lastTouchDist;\n        scale *= scaleFactor;\n\n        scale = Math.max(scale, getMinScale());\n\n        const dx = mid.x - translate.x;\n        const dy = mid.y - translate.y;\n\n        translate.x -= dx * (scale / oldScale - 1);\n        translate.y -= dy * (scale / oldScale - 1);\n\n        updateTransform();\n      }\n\n      lastTouchDist = dist;\n      lastTouchMid = mid;\n    }\n  });\n\n  $svg.on('touchend', function(e) {\n    const touches = e.originalEvent.touches;\n    if (touches.length < 2) {\n      lastTouchDist = null;\n      lastTouchMid = null;\n    }\n    if (touches.length === 0) {\n      isDragging = false;\n    }\n  });\n\n  // Функции для расстояния и середины\n  function getDistance(p1, p2) {\n    const dx = p2.clientX - p1.clientX;\n    const dy = p2.clientY - p1.clientY;\n    return Math.hypot(dx, dy);\n  }\n\n  function getMidpoint(p1, p2) {\n    return {\n      x: (p1.clientX + p2.clientX) / 2,\n      y: (p1.clientY + p2.clientY) / 2\n    };\n  }\n\n  // --- Кнопки управления ---\n\n  $('#zoom-in').on('click', function() {\n    const oldScale = scale;\n    const zoomFactor = 1.2;\n    scale *= zoomFactor;\n    scale = Math.max(scale, getMinScale());\n\n    const rect = $map[0].getBoundingClientRect();\n    const centerX = rect.width / 2;\n    const centerY = rect.height / 2;\n\n    const svgCenterXBefore = (centerX - translate.x) / oldScale;\n    const svgCenterYBefore = (centerY - translate.y) / oldScale;\n\n    translate.x = centerX - svgCenterXBefore * scale;\n    translate.y = centerY - svgCenterYBefore * scale;\n\n    setTransition(true, 'mouse');\n    updateTransform();\n  });\n\n  $('#zoom-out').on('click', function() {\n    const oldScale = scale;\n    const zoomFactor = 1.2;\n    scale /= zoomFactor;\n    scale = Math.max(scale, getMinScale());\n\n    const rect = $map[0].getBoundingClientRect();\n    const centerX = rect.width / 2;\n    const centerY = rect.height / 2;\n\n    const svgCenterXBefore = (centerX - translate.x) / oldScale;\n    const svgCenterYBefore = (centerY - translate.y) / oldScale;\n\n    translate.x = centerX - svgCenterXBefore * scale;\n    translate.y = centerY - svgCenterYBefore * scale;\n\n    setTransition(true, 'mouse');\n    updateTransform();\n  });\n\n  $('#reset').on('click', function() {\n    centerInitialView();\n    setTransition(true, 'mouse');\n  });\n\n  // Инициализация\n  $(window).on('resize', centerInitialView);\n  centerInitialView();\n});\n"]}